import os
import time
import math
import json

result = 0
firtsVal = 0
secondVal = 0
saveResults = False
saveResultMessageShowed = False
specialOperation = False
historyLog = []

class logs(object):
	def __init__(self, val1, val2, operationVal):
		self.val1 = val1
		self.val2 = val2
		self.operationVal = operationVal

	def to_json(self):
		#vraceni vsech operaci ve formatu json objektu
		return { "val1": self.val1, "val2": self.val2, "operationVal": "{}".format(self.operationVal) }

	def show(self):
		#vypsani vsech operaci
		if self.operationVal == '?' or self.operationVal == 'help':
			print('Na≈°el jsi nab√≠dku kde je v≈°e vysvƒõtlen√©, snad to u≈æ ch√°pe≈°.')
		elif self.operationVal == 'null':
			print('Vynuloval jsi v√Ωsledek.')
		elif self.operationVal == 'log':
			print('Jsi frajer, na≈°el jsi v≈°e zalogovan√©.')
		elif self.operationVal == 'export':
			print('Jde vidƒõt ≈æe jsi mega O.G. tester nebo jen kouk√°≈° do zdroj√°ku.')
		elif self.operationVal == '//':
			print('‚àö{} = {}'.format(self.val1, math.sqrt(self.val1)))
		elif self.operationVal == '+':
			print('{} {} {} = {}'.format(self.val1, self.operationVal, self.val2, self.val1 + self.val2))
		elif self.operationVal == '-':
			print('{} {} {} = {}'.format(self.val1, self.operationVal, self.val2, self.val1 - self.val2))
		elif self.operationVal == '/':
			print('{} {} {} = {}'.format(self.val1, self.operationVal, self.val2, self.val1 / self.val2))
		elif self.operationVal == '*':
			print('{} {} {} = {}'.format(self.val1, self.operationVal, self.val2, self.val1 * self.val2))
		elif self.operationVal == '**':
			print('{} na {} = {}'.format(self.val1, self.val2, self.val1 ** self.val2))
		else:
			print('Nechci ≈ô√≠ct, ≈æe jsi hlup√°k... ü§ê')
			print('Ale fakt tuhle operaci nezn√°m: {}'.format(self.operationVal))

#setup pracovani s hodnotami
	if saveResultMessageShowed == False:

		print('Budeme ukl√°dat v√Ωsledky?')
		answer = input('y/n: ')

		if answer == 'y':
			saveResults = True
			print('Volba ulo≈æena. \n')
		elif answer == 'n':
			saveResults = False
			print('Volba ulo≈æena. \n')
		else:
			print('\033[1;31;40mBohu≈æel takovou odpovƒõƒè neberu, rad≈°i to ulo≈æ√≠me.')
			saveResults = True
		saveResultMessageShowed = True

while True:

	print('\033[1;32;40mJakou operaci budeme dƒõlat?')
	print('+, -, *, /, **, //, null')
	operation = input('\033[1;33;40mOperace: ').strip()

	if operation == '+':
		firstVal = float(input('\n\033[1;37;40mZadej 1. ƒç√≠slo: '))
		secondVal = float(input('Zadej 2. ƒç√≠slo: '))
		result += firstVal + secondVal
		historyLog.append(logs(firstVal, secondVal, operation))
	elif operation == '-':
		firstVal = float(input('\n\033[1;37;40mZadej 1. ƒç√≠slo: '))
		secondVal = float(input('Zadej 2. ƒç√≠slo: '))
		result += firstVal - secondVal
		historyLog.append(logs(firstVal, secondVal, operation))
	elif operation == '*':
		firstVal = float(input('\n\033[1;37;40mZadej 1. ƒç√≠slo: '))
		secondVal = float(input('Zadej 2. ƒç√≠slo: '))
		result += firstVal * secondVal
		historyLog.append(logs(firstVal, secondVal, operation))
	elif operation == '/':
		firstVal = float(input('\n\033[1;37;40mZadej 1. ƒç√≠slo: '))
		secondVal = float(input('Zadej 2. ƒç√≠slo: '))
		result += firstVal / secondVal
		historyLog.append(logs(firstVal, secondVal, operation))
	elif operation == '**':
		firstVal = float(input('\n\033[1;37;40mZadej 1. ƒç√≠slo: '))
		secondVal = float(input('Zadej 2. ƒç√≠slo: '))
		result += firstVal ** secondVal
		historyLog.append(logs(firstVal, secondVal, operation))
	elif operation == '//':
		firstVal = float(input('\n\033[1;37;40mZadej ƒç√≠slo k odmocnƒõn√≠: '))
		secondVal = 0
		result += math.sqrt(firstVal)
		historyLog.append(logs(firstVal, 0, operation))
	elif operation == 'null':
		result = 0
		print('\033[1;33;40mV√Ωsledek byl vynulov√°n. \n')
		specialOperation = True
		historyLog.append(logs(0, 0, operation))
	elif operation == '?' or operation == 'help':
		print('\n\033[1;34;40mOperace "+" znamen√° sƒç√≠t√°n√≠. \nOperace "-" znamen√° odƒç√≠t√°n√≠.')
		print('Operace "*" znamen√° n√°soben√≠. \nOperace "/" znamen√° dƒõlen√≠.')
		print('Operace "**" znamen√° mocnƒõn√≠. \nOperace "//" znamen√° odmocnƒõn√≠.')
		print('Operace "null" znamen√° vynulov√°n√≠ v√Ωsledku.')
		print('Operace 01101100 01101111 01100111 znamen√° vyps√°n√≠ v≈°ech dosavadn√≠ch √∫kon≈Ø.')
		print('Operace 01100101 01111000 01110000 01101111 01110010 01110100 znamen√° ulo≈æen√≠ √∫kon≈Ø do tvaru json. \n')
		specialOperation = True
		historyLog.append(logs(0, 0, operation))
	elif operation == 'log':
		historyLog.append(logs(0, 0, operation))
		print('\033[1;34;40mGratuluji, na≈°el jsi easter egg! \n')
		for log in historyLog:
			log.show()
		specialOperation = True
	elif operation == 'export':
		historyLog.append(logs(0,0,operation))
		print('\033[1;34;40mVypad√° to ≈æe jsi asi koukal do zdroj√°ku, no neva j√° ti ulo≈æ√≠m tvoje odpovƒõdi... \n')

		#list convert to json
		listToExport = [obj.to_json() for obj in historyLog]
		jsonData = json.dumps({"logs": listToExport})

		#save json objects to json file
		with open('data.json', 'w', encoding='utf-8') as f:
    			json.dump(jsonData, f, ensure_ascii=False, indent=4)

		print('Tv√© odpovƒõdi √∫spƒõ≈°nƒõ ulo≈æeny.')
		specialOperation = True
	elif operation == 'clear':
		speacialOperation = True
		clear = lambda: os.system('clear')

		for i in range(0, 5):
			time.sleep(0.9)
			print('Konzole se ƒçist√≠ {}...'.format(str(5 - i)))
			if i == 4:
				time.sleep(0.9)
				print('Konzole √∫spƒõ≈°nƒõ vyƒçi≈°tƒõna ‚úÖ.')
				time.sleep(0.9)
		clear()
		specialOperation = True
	else:
		print('\033[1;31;40mBohu≈æel, tuhle operaci {} zat√≠m nezn√°m, snad se j√≠ nauƒç√≠m.'.format(operation) + '\n')
		historyLog.append(logs(0, 0, operation))
		specialOperation = True

	if specialOperation == False:
		print('\033[1;31;40mAktu√°ln√≠ v√Ωsledek je: {}'.format(result) + '\n')

	specialOperation = False

	if saveResults == False:
		result = 0
